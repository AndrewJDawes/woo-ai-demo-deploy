all:
  vars:
    ansible_user: ansible
    build_number: "{{ ansible_date_time.iso8601_micro | to_uuid }}"
    required_docker_label: "org.andrewjdawes.application=andrewjdawes-woo-ai-demo"
    nginx_reverse_proxy_network_name: "andrewjdawes-woo-ai-demo-nginx_proxy_network"
    MYSQL_ROOT_PASSWORD: "{{ lookup('env', 'MYSQL_ROOT_PASSWORD') }}"
    WORDPRESS_DB_NAME: "{{ lookup('env', 'WORDPRESS_DB_NAME') }}"
    WORDPRESS_DB_USER: "{{ lookup('env', 'WORDPRESS_DB_USER') }}"
    WORDPRESS_DB_PASSWORD: "{{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}"
    WORDPRESS_HTTP_URL: "https://woo-ai-demo-wp.codekaizen.net"
    WEAVIATE_HTTP_URL: "http://weaviate:8080"
  hosts:
    ad42e8b2fa7d4a3dbc5aecef7810a624:
      ansible_host: 192.168.0.21
      docker_networks:
        - name: "andrewjdawes-woo-ai-demo-network"
          driver: bridge
      docker_volumes:
        - name: "andrewjdawes-woo-ai-demo-db_data"
          driver: local
        - name: "andrewjdawes-woo-ai-demo-weaviate_data"
          driver: local
      docker_containers:
        - name: "andrewjdawes-woo-ai-demo-db"
          image: "mariadb:11"
          state: "started"
          volumes:
            - "andrewjdawes-woo-ai-demo-db_data:/var/lib/mysql"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
              aliases:
                - "db"
          env:
            MYSQL_DATABASE: "{{ WORDPRESS_DB_NAME }}"
            MYSQL_USER: "{{ WORDPRESS_DB_USER }}"
            MYSQL_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
            MYSQL_ROOT_PASSWORD: "{{ MYSQL_ROOT_PASSWORD }}"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "db"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-adminer"
          image: "adminer"
          state: "started"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          env:
            ADMINER_DEFAULT_SERVER: "{{ WORDPRESS_DB_NAME }}"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "adminer"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-wordpress"
          image: "ghcr.io/andrewjdawes/woo-ai-demo:latest"
          state: "started"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
            - name: "{{ nginx_reverse_proxy_network_name }}"
              aliases:
                - "woo-ai-demo-wp.codekaizen.net"
          env:
            WORDPRESS_DB_NAME: "{{ WORDPRESS_DB_NAME }}"
            WORDPRESS_DB_USER: "{{ WORDPRESS_DB_USER }}"
            WORDPRESS_DB_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
            WORDPRESS_DB_HOST: "db:3306"
            WORDPRESS_TABLE_PREFIX: "sdg_"
            WORDPRESS_CONFIG_WP_HOME: "{{ WORDPRESS_HTTP_URL }}"
            WORDPRESS_CONFIG_WP_SITEURL: "{{ WORDPRESS_HTTP_URL }}"
            WORDPRESS_CONFIG_EXTRA: "define('WP_HOME',getenv_docker('WORDPRESS_CONFIG_WP_HOME','{{ WORDPRESS_HTTP_URL }}')); define('WP_SITEURL',getenv_docker('WORDPRESS_CONFIG_WP_SITEURL','{{ WORDPRESS_HTTP_URL }}')); define( 'FS_METHOD', 'direct'); define( 'DISABLE_WP_CRON', true ); define( 'WP_DEBUG_LOG', true); define( 'WP_DEBUG_DISPLAY', false);"
            WORDPRESS_DEBUG: "true"
          depends_on:
            - "andrewjdawes-woo-ai-demo-db"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "wordpress"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-wpcron"
          image: "wordpress:cli"
          state: "started"
          volumes:
            - "./html:/var/www/html"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          env:
            WORDPRESS_DB_NAME: "{{ WORDPRESS_DB_NAME }}"
            WORDPRESS_DB_USER: "{{ WORDPRESS_DB_USER }}"
            WORDPRESS_DB_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
            WORDPRESS_DB_HOST: "db:3306"
            WORDPRESS_TABLE_PREFIX: "sdg_"
            WORDPRESS_CONFIG_WP_HOME: "{{ WORDPRESS_HTTP_URL }}"
            WORDPRESS_CONFIG_WP_SITEURL: "{{ WORDPRESS_HTTP_URL }}"
            WORDPRESS_CONFIG_EXTRA: "define('WP_HOME',getenv_docker('WORDPRESS_CONFIG_WP_HOME','{{ WORDPRESS_HTTP_URL }}')); define('WP_SITEURL',getenv_docker('WORDPRESS_CONFIG_WP_SITEURL','{{ WORDPRESS_HTTP_URL }}')); define( 'FS_METHOD', 'direct'); define( 'DISABLE_WP_CRON', true ); define( 'WP_DEBUG_LOG', true); define( 'WP_DEBUG_DISPLAY', false);"
            WORDPRESS_DEBUG: "true"
          depends_on:
            - "andrewjdawes-woo-ai-demo-wordpress"
          command: >
            /bin/bash -c "set -x; until wp db check --skip-ssl --path=/var/www/html; do echo 'Waiting for database connection...' && sleep 5; done; while true; do wp cron event run --due-now --path=/var/www/html 1>/dev/stdout 2>&1 || true; sleep 900; done;"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "wpcron"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-weaviate"
          image: "cr.weaviate.io/semitechnologies/weaviate:1.30.0"
          state: "started"
          volumes:
            - "andrewjdawes-woo-ai-demo-weaviate_data:/var/lib/weaviate"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          env:
            CONTEXTIONARY_URL: "contextionary:9999"
            SPELLCHECK_INFERENCE_API: "http://text-spellcheck:8080"
            QUERY_DEFAULTS_LIMIT: "25"
            AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
            PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
            DEFAULT_VECTORIZER_MODULE: "text2vec-contextionary"
            ENABLE_MODULES: "text2vec-contextionary,text-spellcheck"
            CLUSTER_HOSTNAME: "node1"
          command:
            - --host
            - 0.0.0.0
            - --port
            - "8080"
            - --scheme
            - http
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "weaviate"
          restart_policy: on-failure
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-contextionary"
          image: "cr.weaviate.io/semitechnologies/contextionary:en0.16.0-v1.2.1"
          state: "started"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          env:
            OCCURRENCE_WEIGHT_LINEAR_FACTOR: "0.75"
            EXTENSIONS_STORAGE_MODE: "weaviate"
            EXTENSIONS_STORAGE_ORIGIN: "{{ WEAVIATE_HTTP_URL }}"
            NEIGHBOR_OCCURRENCE_IGNORE_PERCENTILE: "5"
            ENABLE_COMPOUND_SPLITTING: "false"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "contextionary"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-text-spellcheck"
          image: "cr.weaviate.io/semitechnologies/text-spellcheck-model:pyspellchecker-en"
          state: "started"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "text-spellcheck"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-weaviate-ui"
          image: "naaive/weaviate-ui:latest"
          state: "started"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          env:
            WEAVIATE_URL: "{{ WEAVIATE_HTTP_URL }}"
          depends_on:
            - "andrewjdawes-woo-ai-demo-weaviate"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "weaviate-ui"
          restart_policy: unless-stopped
          replica_count: 1
          deploy_strategy: "recreate"
        - name: "andrewjdawes-woo-ai-demo-wpcli"
          image: "wordpress:cli"
          state: "started"
          volumes:
            - "./html:/var/www/html"
            - "./scripts:/scripts"
          networks:
            - name: "andrewjdawes-woo-ai-demo-network"
          env:
            WORDPRESS_DB_NAME: "{{ WORDPRESS_DB_NAME }}"
            WORDPRESS_DB_USER: "{{ WORDPRESS_DB_USER }}"
            WORDPRESS_DB_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
            WORDPRESS_DB_HOST: "db:3306"
            WORDPRESS_TABLE_PREFIX: "sdg_"
            WORDPRESS_CONFIG_WP_HOME: "{{ WORDPRESS_HTTP_URL }}"
            WORDPRESS_CONFIG_WP_SITEURL: "{{ WORDPRESS_HTTP_URL }}"
            WORDPRESS_CONFIG_EXTRA: "define('WP_HOME',getenv_docker('WORDPRESS_CONFIG_WP_HOME','{{ WORDPRESS_HTTP_URL }}')); define('WP_SITEURL',getenv_docker('WORDPRESS_CONFIG_WP_SITEURL','{{ WORDPRESS_HTTP_URL }}')); define( 'FS_METHOD', 'direct'); define( 'DISABLE_WP_CRON', true ); define( 'WP_DEBUG_LOG', true); define( 'WP_DEBUG_DISPLAY', false);"
            WORDPRESS_DEBUG: "true"
            WORDPRESS_PLUGINS_TO_ACTIVATE: "woocommerce wpsolr-free"
            WORDPRESS_ADMIN_USER: "admin"
            WORDPRESS_ADMIN_PASSWORD: "admin"
            WORDPRESS_ADMIN_EMAIL: "admin@example.com"
            WORDPRESS_SITE_TITLE: "WordPress Site"
            WORDPRESS_DOMAIN: "localhost"
            WORDPRESS_PROTOCOL: "http"
            WORDPRESS_HOST_PORT: "8080"
            WORDPRESS_CONFIG_WP_DEBUG: "true"
          depends_on:
            - "andrewjdawes-woo-ai-demo-wordpress"
          command: "/bin/bash /scripts/wpcli.sh"
          labels:
            org.andrewjdawes.application: "andrewjdawes-woo-ai-demo"
            org.andrewjdawes.service: "wpcli"
          restart_policy: always
          replica_count: 1
          deploy_strategy: "recreate"
